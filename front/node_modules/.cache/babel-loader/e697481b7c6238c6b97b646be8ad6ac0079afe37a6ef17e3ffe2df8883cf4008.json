{"ast":null,"code":"var _jsxFileName = \"/home/alex/code/TodoWithBackend/front/src/features/helpChat/HelpChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Modal__Help, Modal__Help__Opened, Modal__Help__Closed, Modal__Help__Input, Modal__Help__Header, Modal__Help__Texting__Area, Modal__Help__Chat, Chat__Support } from \"./HelpChatStyles\";\nimport { someMessages } from \"../../messageData\";\nimport Button from \"../common/Button\";\nimport { closeBtn } from \"../todos/Todo.styles\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HelpChat({\n  modal,\n  setModal\n}) {\n  _s();\n  const [messages, setMessages] = useState(\"\");\n  const [messages1, setMessages1] = useState();\n  console.log(2, messages, messages1, 2);\n  useEffect(() => {\n    const socket = io(\"http://localhost:3001\");\n  }, []);\n  let nodeMessages = useRef(null);\n  const scrollToLastMessage = async () => {\n    var _nodeMessages$current;\n    const lastChildElement = await ((_nodeMessages$current = nodeMessages.current) === null || _nodeMessages$current === void 0 ? void 0 : _nodeMessages$current.lastElementChild);\n    lastChildElement === null || lastChildElement === void 0 ? void 0 : lastChildElement.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const chatHandler = () => {\n    setModal(!modal);\n  };\n  const sendMessage = () => {\n    console.log(\"send\");\n    // if (messages.trim()) {\n    //     const message = {\n    //         author: \"Alex\",\n    //         message: messages,\n    //         id: \"string\" + new Date().getTime() + messages,\n    //         time: \"17:52\" + Math.random() * 1000,\n    //     };\n    //     someMessages.push(message);\n    //     setMessages(\"\");\n    // }\n    if (messages.trim()) {\n      const message = {\n        author: \"Alex\",\n        message: messages,\n        id: \"string\" + new Date().getTime() + messages,\n        time: \"17:52\" + Math.random() * 1000\n      };\n      // socket.emit(\"chat message\", messages);\n      setMessages(\"\");\n    }\n    return;\n  };\n  const mappedJSX = /*#__PURE__*/_jsxDEV(Modal__Help__Texting__Area, {\n    ref: nodeMessages,\n    children: someMessages.map(el => {\n      scrollToLastMessage().then(() => scrollToLastMessage());\n      return el.manager ? /*#__PURE__*/_jsxDEV(Modal__Help__Chat, {\n        $user: true,\n        children: [/*#__PURE__*/_jsxDEV(Chat__Support, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: el.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: el.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: el.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, new Date().getTime() + el.time, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Modal__Help__Chat, {\n        $user: false,\n        children: [el.message, /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: el.time.slice(0, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, new Date().getTime() + el.time, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal__Help, {\n    children: modal ? /*#__PURE__*/_jsxDEV(Modal__Help__Opened, {\n      $modal: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal__Help__Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: closeBtn,\n          onClick: chatHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), mappedJSX, /*#__PURE__*/_jsxDEV(Modal__Help__Input, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"\",\n          id: \"\",\n          onChange: value => setMessages(value.currentTarget.value + \"\"),\n          value: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"send\",\n          onClick: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Modal__Help__Closed, {\n      $modal: true,\n      onBlur: chatHandler,\n      onClick: chatHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: closeBtn,\n        onClick: chatHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(HelpChat, \"dmvDLNCOj0o5yG6aZ7k17Mr4yLw=\");\n_c = HelpChat;\nvar _c;\n$RefreshReg$(_c, \"HelpChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Modal__Help","Modal__Help__Opened","Modal__Help__Closed","Modal__Help__Input","Modal__Help__Header","Modal__Help__Texting__Area","Modal__Help__Chat","Chat__Support","someMessages","Button","closeBtn","io","jsxDEV","_jsxDEV","HelpChat","modal","setModal","_s","messages","setMessages","messages1","setMessages1","console","log","socket","nodeMessages","scrollToLastMessage","_nodeMessages$current","lastChildElement","current","lastElementChild","scrollIntoView","behavior","chatHandler","sendMessage","trim","message","author","id","Date","getTime","time","Math","random","mappedJSX","ref","children","map","el","then","manager","$user","fileName","_jsxFileName","lineNumber","columnNumber","slice","$modal","icon","onClick","name","onChange","value","currentTarget","onBlur","_c","$RefreshReg$"],"sources":["/home/alex/code/TodoWithBackend/front/src/features/helpChat/HelpChat.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Modal__Help,\r\n    Modal__Help__Opened,\r\n    Modal__Help__Closed,\r\n    Modal__Help__Input,\r\n    Modal__Help__Header,\r\n    Modal__Help__Texting__Area,\r\n    Modal__Help__Chat,\r\n    Chat__Support,\r\n} from \"./HelpChatStyles\";\r\nimport {SomeMessages, someMessages} from \"../../messageData\";\r\nimport Button from \"../common/Button\";\r\nimport {closeBtn} from \"../todos/Todo.styles\";\r\nimport io from \"socket.io-client\";\r\n\r\ntype ModalHelpType = {\r\n    modal: boolean;\r\n    setModal: (value: boolean) => void;\r\n};\r\n\r\n\r\nexport default function HelpChat({modal, setModal}: ModalHelpType) {\r\n    const [messages, setMessages] = useState(\"\");\r\n    const [messages1, setMessages1] = useState<any>();\r\n    console.log(2, messages, messages1, 2);\r\n    useEffect(() => {\r\n        const socket = io(\"http://localhost:3001\");\r\n    }, []);\r\n\r\n    let nodeMessages = useRef<HTMLInputElement | null>(null);\r\n\r\n    const scrollToLastMessage = async () => {\r\n        const lastChildElement = await nodeMessages.current?.lastElementChild;\r\n        lastChildElement?.scrollIntoView({behavior: \"smooth\"});\r\n    };\r\n    const chatHandler = () => {\r\n        setModal(!modal);\r\n    };\r\n    const sendMessage = () => {\r\n        console.log(\"send\");\r\n        // if (messages.trim()) {\r\n        //     const message = {\r\n        //         author: \"Alex\",\r\n        //         message: messages,\r\n        //         id: \"string\" + new Date().getTime() + messages,\r\n        //         time: \"17:52\" + Math.random() * 1000,\r\n        //     };\r\n        //     someMessages.push(message);\r\n        //     setMessages(\"\");\r\n        // }\r\n        if (messages.trim()) {\r\n            const message = {\r\n                author: \"Alex\",\r\n                message: messages,\r\n                id: \"string\" + new Date().getTime() + messages,\r\n                time: \"17:52\" + Math.random() * 1000,\r\n            };\r\n            // socket.emit(\"chat message\", messages);\r\n            setMessages(\"\");\r\n        }\r\n        return;\r\n    };\r\n\r\n    const mappedJSX = (\r\n        <Modal__Help__Texting__Area ref={nodeMessages}>\r\n            {someMessages.map((el: SomeMessages) => {\r\n                scrollToLastMessage().then(() => scrollToLastMessage());\r\n                return el.manager ? (\r\n                    <Modal__Help__Chat $user={true} key={new Date().getTime() + el.time}>\r\n                        <Chat__Support>\r\n                            <strong>{el.author}</strong>\r\n                            <pre>{el.message}</pre>\r\n                        </Chat__Support>\r\n                        <pre>{el.time}</pre>\r\n                    </Modal__Help__Chat>\r\n                ) : (\r\n                    <Modal__Help__Chat $user={false} key={new Date().getTime() + el.time}>\r\n                        {el.message}\r\n                        <pre>{el.time.slice(0, 5)}</pre>\r\n                    </Modal__Help__Chat>\r\n                );\r\n            })}\r\n        </Modal__Help__Texting__Area>\r\n    );\r\n\r\n    return (\r\n        <Modal__Help>\r\n            {modal ? (\r\n                <Modal__Help__Opened $modal>\r\n                    <Modal__Help__Header>\r\n                        <strong>help</strong>\r\n                        <Button icon={closeBtn} onClick={chatHandler} />\r\n                    </Modal__Help__Header>\r\n                    {mappedJSX}\r\n                    <Modal__Help__Input>\r\n                        <textarea\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(value) => setMessages(value.currentTarget.value + \"\")}\r\n                            value={messages}\r\n                        />\r\n                        <Button name=\"send\" onClick={sendMessage} />\r\n                    </Modal__Help__Input>\r\n                </Modal__Help__Opened>\r\n            ) : (\r\n                <Modal__Help__Closed $modal onBlur={chatHandler} onClick={chatHandler}>\r\n                    <strong>help</strong>\r\n                    <Button icon={closeBtn} onClick={chatHandler} />\r\n                </Modal__Help__Closed>\r\n            )}\r\n        </Modal__Help>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}