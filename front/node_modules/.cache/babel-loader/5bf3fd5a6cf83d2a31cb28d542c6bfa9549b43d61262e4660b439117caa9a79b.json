{"ast":null,"code":"var _jsxFileName = \"/home/alex/code/TodoWithBackend/front/src/features/todos/Todo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { deleteTodo, updateTodo } from \"./todosReducer\";\nimport Button from \"../common/Button\";\nimport { useAppDispatch } from \"../../store/store\";\nimport { Button__Container, Task__Container, Task__Error__Wrapper, Todo__Container, Todo__Container__Wrapper, Todo__Label, addBtn, closeBtn, editBtn } from \"./Todo.styles\";\nimport MainInput from \"../mainInput/MainInput\";\nimport Task from \"../tasks/Task\";\nimport { createTask, getTasks } from \"../tasks/tasksReducer\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todo({\n  todo\n}) {\n  _s();\n  const tasks = useSelector(state => state.tasks);\n  const {\n    todo_id,\n    todo_name\n  } = todo;\n  const [task, setTask] = useState(\"\");\n  const [todoName, changeTodoName] = useState(todo_name);\n  const [visible, setVisible] = useState(true);\n  const [taskError, setTaskError] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const filteredTasksForTodo = tasks.filter(el => el.tasks_todo_id == todo_id ? el : \"\");\n  const filteredTasks = filteredTasksForTodo.reduce(function (acc, el, i) {\n    el.task_id >= filteredTasksForTodo[i].task_id ? acc.unshift(el) : acc.push(el);\n    return acc;\n  }, []);\n  const mappedTasks = filteredTasks.map(el => {\n    return /*#__PURE__*/_jsxDEV(Task, {\n      task: el\n    }, el.task_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  });\n  const editTodoHandler = (id, value) => {\n    const updatedCurrentTodo = {\n      todo_name: value,\n      todo_filter: \"updated\"\n    };\n    dispatch(updateTodo({\n      id,\n      data: updatedCurrentTodo\n    }));\n  };\n  const deleteTodoHandler = id => {\n    dispatch(deleteTodo(id));\n  };\n  const doubleClickHandler = () => {\n    setVisible(false);\n  };\n  const editHandler = () => setVisible(true);\n  const createNewTask = value => {\n    console.log(3);\n    if (value.trim()) {\n      console.log(5);\n      dispatch(createTask({\n        task_name: value,\n        taks_is_done: false,\n        tasks_todo_id: todo_id\n      }));\n      dispatch(getTasks());\n      setTask(\"\");\n      return;\n    }\n    console.log(6);\n    setTaskError(\"task name can't be empty\");\n  };\n  return /*#__PURE__*/_jsxDEV(Todo__Container, {\n    $width: \"400px\",\n    children: /*#__PURE__*/_jsxDEV(Todo__Container__Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Todo__Label, {\n        $width: \"400px\",\n        children: [/*#__PURE__*/_jsxDEV(Button__Container, {\n          $width: \"70%\",\n          children: visible ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"black\",\n              fontSize: \"1.2em\",\n              fontWeight: \"500\"\n            },\n            onDoubleClick: doubleClickHandler,\n            children: todoName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(MainInput, {\n            todo: todoName,\n            setTodo: changeTodoName,\n            setError: setTaskError,\n            edit: editHandler,\n            editTodoHandler: editTodoHandler,\n            todo_id: todo_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: editBtn,\n          onClick: doubleClickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: closeBtn,\n          onClick: () => deleteTodoHandler(todo_id),\n          tooltip: \"delete todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button__Container, {\n        $width: \"400px\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MainInput, {\n            placeholder: \"new task\",\n            todo: task,\n            setTodo: setTask,\n            setError: setTaskError,\n            id: \"taskInput\",\n            editTodoHandler: (id, value) => createNewTask(value),\n            todo_id: todo_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Task__Error__Wrapper, {\n            children: taskError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: addBtn,\n          onClick: () => createNewTask(task),\n          tooltip: \"create task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Task__Container, {\n        children: mappedTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"Czra26XvESFdOLGf6swhH1Qnfqs=\", false, function () {\n  return [useSelector, useAppDispatch];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","deleteTodo","updateTodo","Button","useAppDispatch","Button__Container","Task__Container","Task__Error__Wrapper","Todo__Container","Todo__Container__Wrapper","Todo__Label","addBtn","closeBtn","editBtn","MainInput","Task","createTask","getTasks","useSelector","jsxDEV","_jsxDEV","Todo","todo","_s","tasks","state","todo_id","todo_name","task","setTask","todoName","changeTodoName","visible","setVisible","taskError","setTaskError","dispatch","filteredTasksForTodo","filter","el","tasks_todo_id","filteredTasks","reduce","acc","i","task_id","unshift","push","mappedTasks","map","fileName","_jsxFileName","lineNumber","columnNumber","editTodoHandler","id","value","updatedCurrentTodo","todo_filter","data","deleteTodoHandler","doubleClickHandler","editHandler","createNewTask","console","log","trim","task_name","taks_is_done","$width","children","style","color","fontSize","fontWeight","onDoubleClick","setTodo","setError","edit","icon","onClick","tooltip","placeholder","_c","$RefreshReg$"],"sources":["/home/alex/code/TodoWithBackend/front/src/features/todos/Todo.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {TaskType, TodoType} from \"../../api/apiTypes\";\r\nimport {deleteTodo, updateTodo} from \"./todosReducer\";\r\nimport Button from \"../common/Button\";\r\nimport {AppRootStateType, useAppDispatch} from \"../../store/store\";\r\nimport {\r\n    Button__Container,\r\n    Task__Container,\r\n    Task__Error__Wrapper,\r\n    Todo__Container,\r\n    Todo__Container__Wrapper,\r\n    Todo__Label,\r\n    addBtn,\r\n    closeBtn,\r\n    editBtn,\r\n} from \"./Todo.styles\";\r\nimport MainInput from \"../mainInput/MainInput\";\r\nimport Task from \"../tasks/Task\";\r\nimport {createTask, getTasks} from \"../tasks/tasksReducer\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\ntype TodosType = {\r\n    todo: TodoType;\r\n};\r\n\r\nexport function Todo({todo}: TodosType) {\r\n    const tasks = useSelector<AppRootStateType, TaskType[]>((state) => state.tasks);\r\n    const {todo_id, todo_name} = todo;\r\n    const [task, setTask] = useState(\"\");\r\n    const [todoName, changeTodoName] = useState(todo_name);\r\n    const [visible, setVisible] = useState(true);\r\n    const [taskError, setTaskError] = useState(\"\");\r\n    const dispatch = useAppDispatch();\r\n    const filteredTasksForTodo = tasks.filter((el) => (el.tasks_todo_id == todo_id ? el : \"\"));\r\n    const filteredTasks: TaskType[] = filteredTasksForTodo.reduce(function (acc: TaskType[], el: TaskType, i: number) {\r\n        el.task_id >= filteredTasksForTodo[i].task_id ? acc.unshift(el) : acc.push(el);\r\n        return acc;\r\n    }, []);\r\n    const mappedTasks = filteredTasks.map((el) => {\r\n        return <Task task={el} key={el.task_id} />;\r\n    });\r\n    const editTodoHandler = (id: string, value: string) => {\r\n        const updatedCurrentTodo = {\r\n            todo_name: value,\r\n            todo_filter: \"updated\",\r\n        };\r\n        dispatch(updateTodo({id, data: updatedCurrentTodo}));\r\n    };\r\n    const deleteTodoHandler = (id: string) => {\r\n        dispatch(deleteTodo(id));\r\n    };\r\n    const doubleClickHandler = () => {\r\n        setVisible(false);\r\n    };\r\n    const editHandler = () => setVisible(true);\r\n    const createNewTask = (value: string) => {\r\n        console.log(3)\r\n        if (value.trim()) {\r\n            console.log(5)\r\n            dispatch(\r\n                createTask({\r\n                    task_name: value,\r\n                    taks_is_done: false,\r\n                    tasks_todo_id: todo_id,\r\n                })\r\n            );\r\n            dispatch(getTasks());\r\n            setTask(\"\");\r\n            return;\r\n        }\r\n        console.log(6)\r\n        setTaskError(\"task name can't be empty\");\r\n    };\r\n\r\n    return (\r\n        <Todo__Container $width=\"400px\">\r\n            <Todo__Container__Wrapper>\r\n                <Todo__Label $width=\"400px\">\r\n                    <Button__Container $width=\"70%\">\r\n                        {visible ? (\r\n                            <span\r\n                                style={{color: \"black\", fontSize: \"1.2em\", fontWeight: \"500\"}}\r\n                                onDoubleClick={doubleClickHandler}>\r\n                                {todoName}\r\n                            </span>\r\n                        ) : (\r\n                            <MainInput\r\n                                todo={todoName}\r\n                                setTodo={changeTodoName}\r\n                                setError={setTaskError}\r\n                                edit={editHandler}\r\n                                editTodoHandler={editTodoHandler}\r\n                                todo_id={todo_id}\r\n                            />\r\n                        )}\r\n                    </Button__Container>\r\n                    <Button icon={editBtn} onClick={doubleClickHandler} />\r\n                    <Button icon={closeBtn} onClick={() => deleteTodoHandler(todo_id)} tooltip=\"delete todo\" />\r\n                </Todo__Label>\r\n\r\n                <Button__Container $width=\"400px\">\r\n                    <div>\r\n                        <MainInput\r\n                            placeholder=\"new task\"\r\n                            todo={task}\r\n                            setTodo={setTask}\r\n                            setError={setTaskError}\r\n                            id=\"taskInput\"\r\n                            editTodoHandler={(id, value)=>createNewTask(value)}\r\n                            todo_id={todo_id}\r\n                        />\r\n                        <Task__Error__Wrapper>{taskError}</Task__Error__Wrapper>\r\n                    </div>\r\n                    <Button icon={addBtn} onClick={() => createNewTask(task)} tooltip=\"create task\" />\r\n                </Button__Container>\r\n\r\n                <Task__Container>{mappedTasks}</Task__Container>\r\n            </Todo__Container__Wrapper>\r\n        </Todo__Container>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}