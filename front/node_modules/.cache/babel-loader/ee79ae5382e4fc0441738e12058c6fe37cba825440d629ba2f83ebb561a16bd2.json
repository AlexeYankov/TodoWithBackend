{"ast":null,"code":"var _jsxFileName = \"/home/alex/code/TodoWithBackend/front/src/features/mainInput/MainInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Todo__Input__Container, Todo__Input } from \"./MainInput.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainInput({\n  setTodo,\n  todo,\n  setError,\n  placeholder,\n  edit,\n  id,\n  editTodoHandler,\n  todo_id\n}) {\n  _s();\n  const [currentState, setCurrentState] = useState(todo);\n  const valueHandler = e => {\n    if (id === \"mainInput\") {\n      setTodo(e.currentTarget.value);\n      setCurrentState(e.currentTarget.value);\n      setError(\"\");\n      return;\n    } else if (id === \"taskInput\") {\n      setTodo(e.currentTarget.value);\n      setCurrentState(e.currentTarget.value);\n      setError(\"\");\n      return;\n    } else {\n      setCurrentState(e.currentTarget.value);\n      setError(\"\");\n    }\n  };\n  const handleKeyPress = e => {\n    console.log(\"pressed\");\n    if (currentState.trim()) {\n      console.log(\"pressed1\");\n      if (e.key === \"Enter\") {\n        console.log(\"pressed2\");\n        setCurrentState(e.currentTarget.value);\n        setTodo(e.currentTarget.value);\n        console.log(todo_id, editTodoHandler);\n        todo_id && editTodoHandler && editTodoHandler(todo_id, e.currentTarget.value);\n        edit && edit();\n        return;\n      }\n    }\n    if (e.key === \"Enter\") {\n      console.log(\"pressed3\");\n      setError(\"task name can't be empty\");\n    }\n  };\n  const handleKeyUp = e => {\n    if (e.key == \"Escape\") {\n      edit && edit();\n      setTodo(todo);\n      setError(\"\");\n    }\n    return;\n  };\n  const onBlurHandler = () => {\n    edit && edit();\n    setTodo(todo);\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Todo__Input__Container, {\n    children: /*#__PURE__*/_jsxDEV(Todo__Input, {\n      type: \"text\",\n      placeholder: placeholder,\n      value: id === \"mainInput\" || id === \"taskInput\" ? todo : currentState,\n      onChange: valueHandler,\n      onKeyPress: handleKeyPress,\n      onKeyUp: handleKeyUp,\n      onBlur: onBlurHandler,\n      id: id,\n      autoFocus: id === \"mainInput\" ? false : true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(MainInput, \"A1+kSG5AAdgnKeZ0iuHNwEevJSA=\");\n_c = MainInput;\nvar _c;\n$RefreshReg$(_c, \"MainInput\");","map":{"version":3,"names":["React","useState","Todo__Input__Container","Todo__Input","jsxDEV","_jsxDEV","MainInput","setTodo","todo","setError","placeholder","edit","id","editTodoHandler","todo_id","_s","currentState","setCurrentState","valueHandler","e","currentTarget","value","handleKeyPress","console","log","trim","key","handleKeyUp","onBlurHandler","children","type","onChange","onKeyPress","onKeyUp","onBlur","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alex/code/TodoWithBackend/front/src/features/mainInput/MainInput.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport {Todo__Input__Container, Todo__Input} from \"./MainInput.styles\";\r\n\r\nexport type InputType = {\r\n    setTodo: (value: string) => void;\r\n    setError: (value: string) => void;\r\n    todo: string;\r\n    placeholder?: string;\r\n    edit?: () => void;\r\n    id?: string;\r\n    todo_id?: string;\r\n    editTodoHandler?: (id: string, value: string) => void;\r\n};\r\nexport default function MainInput({\r\n    setTodo,\r\n    todo,\r\n    setError,\r\n    placeholder,\r\n    edit,\r\n    id,\r\n    editTodoHandler,\r\n    todo_id,\r\n}: InputType) {\r\n    const [currentState, setCurrentState] = useState(todo);\r\n    const valueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (id === \"mainInput\") {\r\n            setTodo(e.currentTarget.value);\r\n            setCurrentState(e.currentTarget.value);\r\n            setError(\"\");\r\n            return;\r\n        } else if (id === \"taskInput\") {\r\n            setTodo(e.currentTarget.value);\r\n            setCurrentState(e.currentTarget.value);\r\n            setError(\"\");\r\n            return;\r\n        } else {\r\n            setCurrentState(e.currentTarget.value);\r\n            setError(\"\");\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        console.log(\"pressed\")\r\n        if (currentState.trim()) {\r\n            console.log(\"pressed1\")\r\n            if (e.key === \"Enter\") {\r\n                console.log(\"pressed2\")\r\n                setCurrentState(e.currentTarget.value);\r\n                setTodo(e.currentTarget.value);\r\n                console.log(todo_id, editTodoHandler)\r\n                todo_id && editTodoHandler && editTodoHandler(todo_id, e.currentTarget.value);\r\n                edit && edit();\r\n                return;\r\n            }\r\n        }\r\n        if (e.key === \"Enter\") {\r\n            console.log(\"pressed3\")\r\n            setError(\"task name can't be empty\");\r\n        }\r\n    };\r\n\r\n    const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key == \"Escape\") {\r\n            edit && edit();\r\n            setTodo(todo);\r\n            setError(\"\");\r\n        }\r\n        return;\r\n    };\r\n\r\n    const onBlurHandler = () => {\r\n        edit && edit();\r\n        setTodo(todo);\r\n        setError(\"\");\r\n    };\r\n    return (\r\n        <Todo__Input__Container>\r\n            <Todo__Input\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                value={id === \"mainInput\" || id === \"taskInput\" ? todo : currentState}\r\n                onChange={valueHandler}\r\n                onKeyPress={handleKeyPress}\r\n                onKeyUp={handleKeyUp}\r\n                onBlur={onBlurHandler}\r\n                id={id}\r\n                autoFocus={id === \"mainInput\" ? false : true}\r\n            />\r\n        </Todo__Input__Container>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAClD,SAAQC,sBAAsB,EAAEC,WAAW,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYvE,eAAe,SAASC,SAASA,CAAC;EAC9BC,OAAO;EACPC,IAAI;EACJC,QAAQ;EACRC,WAAW;EACXC,IAAI;EACJC,EAAE;EACFC,eAAe;EACfC;AACO,CAAC,EAAE;EAAAC,EAAA;EACV,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAACO,IAAI,CAAC;EACtD,MAAMU,YAAY,GAAIC,CAAgC,IAAK;IACvD,IAAIP,EAAE,KAAK,WAAW,EAAE;MACpBL,OAAO,CAACY,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;MAC9BJ,eAAe,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;MACtCZ,QAAQ,CAAC,EAAE,CAAC;MACZ;IACJ,CAAC,MAAM,IAAIG,EAAE,KAAK,WAAW,EAAE;MAC3BL,OAAO,CAACY,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;MAC9BJ,eAAe,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;MACtCZ,QAAQ,CAAC,EAAE,CAAC;MACZ;IACJ,CAAC,MAAM;MACHQ,eAAe,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;MACtCZ,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAED,MAAMa,cAAc,GAAIH,CAAwC,IAAK;IACjEI,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAIR,YAAY,CAACS,IAAI,CAAC,CAAC,EAAE;MACrBF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,IAAIL,CAAC,CAACO,GAAG,KAAK,OAAO,EAAE;QACnBH,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvBP,eAAe,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;QACtCd,OAAO,CAACY,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;QAC9BE,OAAO,CAACC,GAAG,CAACV,OAAO,EAAED,eAAe,CAAC;QACrCC,OAAO,IAAID,eAAe,IAAIA,eAAe,CAACC,OAAO,EAAEK,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;QAC7EV,IAAI,IAAIA,IAAI,CAAC,CAAC;QACd;MACJ;IACJ;IACA,IAAIQ,CAAC,CAACO,GAAG,KAAK,OAAO,EAAE;MACnBH,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBf,QAAQ,CAAC,0BAA0B,CAAC;IACxC;EACJ,CAAC;EAED,MAAMkB,WAAW,GAAIR,CAAwC,IAAK;IAC9D,IAAIA,CAAC,CAACO,GAAG,IAAI,QAAQ,EAAE;MACnBf,IAAI,IAAIA,IAAI,CAAC,CAAC;MACdJ,OAAO,CAACC,IAAI,CAAC;MACbC,QAAQ,CAAC,EAAE,CAAC;IAChB;IACA;EACJ,CAAC;EAED,MAAMmB,aAAa,GAAGA,CAAA,KAAM;IACxBjB,IAAI,IAAIA,IAAI,CAAC,CAAC;IACdJ,OAAO,CAACC,IAAI,CAAC;IACbC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EACD,oBACIJ,OAAA,CAACH,sBAAsB;IAAA2B,QAAA,eACnBxB,OAAA,CAACF,WAAW;MACR2B,IAAI,EAAC,MAAM;MACXpB,WAAW,EAAEA,WAAY;MACzBW,KAAK,EAAET,EAAE,KAAK,WAAW,IAAIA,EAAE,KAAK,WAAW,GAAGJ,IAAI,GAAGQ,YAAa;MACtEe,QAAQ,EAAEb,YAAa;MACvBc,UAAU,EAAEV,cAAe;MAC3BW,OAAO,EAAEN,WAAY;MACrBO,MAAM,EAAEN,aAAc;MACtBhB,EAAE,EAAEA,EAAG;MACPuB,SAAS,EAAEvB,EAAE,KAAK,WAAW,GAAG,KAAK,GAAG;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAEjC;AAACxB,EAAA,CA7EuBT,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}